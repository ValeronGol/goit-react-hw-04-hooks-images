{"version":3,"sources":["services/api.js","services/scroll.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["axios","defaults","baseURL","fetchImages","query","page","a","get","response","data","scroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","SearchHeader","styled","header","Searchform","form","SearchButton","button","SearchLabel","span","SearchInput","input","Searchbar","props","onSubmit","event","preventDefault","target","value","trim","toLowerCase","toast","error","type","autoComplete","autoFocus","placeholder","Gallery","ul","Item","div","Img","img","ImageGalleryItem","image","largeImageURL","tags","src","alt","prototype","PropTypes","string","isRequired","ImageGallery","images","onClick","map","id","webformatURL","LoaderMore","style","margin","color","height","width","timeout","Btn","Button","func","Overlay","ContainerModal","Modal","useEffect","addEventListener","hendelKeyDown","removeEventListener","e","code","showModal","currentTarget","ConteinerApp","TitleApp","h3","App","useState","setQuery","total","setTotal","setImages","setPage","reqStatus","setReqStatus","isOpenModal","setIsOpenModal","photo","setpPhoto","imgData","prevImages","hits","totalHits","getImages","toggleModalShow","dataset","dataQuery","length","prevPage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5fc0120c.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\nconst params = 'image_type=photo&orientation=horizontal&per_page=12';\nconst key = '22579903-23cd6d72a32c76f3810c95a65';\n\nexport const fetchImages = async (query, page) => {\n  const response = await axios.get(\n    `?key=${key}&q=${query}&page=${page}&${params}`,\n  );\n  return response.data;\n};\n","export const scroll = () => {\n  return window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const SearchHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const Searchform = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport {\n  SearchHeader,\n  Searchform,\n  SearchButton,\n  SearchLabel,\n  SearchInput,\n} from './Searchbar.styled';\n\nexport const Searchbar = props => {\n  function inputQuery(event) {\n    event.preventDefault();\n    if (event.target[1].value.trim() === '') {\n      toast.error('Для поиска необходимо ввести слово');\n      return;\n    }\n    props.onSubmit(event.target[1].value.toLowerCase());\n    event.target[1].value = '';\n  }\n  return (\n    <SearchHeader>\n      <Searchform onSubmit={inputQuery}>\n        <SearchButton type=\"submit\">\n          <SearchLabel>Search</SearchLabel>\n        </SearchButton>\n\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </Searchform>\n    </SearchHeader>\n  );\n};\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.div`\n  border-radius: 2px;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14),\n    0 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Img } from './ImageGalleryItem.styled';\n\nconst ImageGalleryItem = ({ image, largeImageURL, tags }) => {\n  return (\n    <Item>\n      <Img src={image} alt={tags} data-photo={largeImageURL} />\n    </Item>\n  );\n};\n\nImageGalleryItem.prototype = {\n  image: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport { Gallery } from './ImageGallery.styled';\nimport ImageGalleryItem from 'components/ImageGallery/ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGallery = ({ images, onClick }) => {\n  return (\n    <Gallery onClick={onClick}>\n      {images.map(({ id, largeImageURL, webformatURL, tags }) => (\n        <li key={id}>\n          <ImageGalleryItem\n            image={webformatURL}\n            tags={tags}\n            largeImageURL={largeImageURL}\n          />\n        </li>\n      ))}\n    </Gallery>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import Loader from 'react-loader-spinner';\n\nexport const LoaderMore = () => {\n  return (\n    <div style={{ margin: 'auto' }}>\n      <Loader\n        type=\"Circles\"\n        color=\"green\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  margin: auto;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styled';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <Btn type=\"button\" onClick={onClick}>\n      Load more\n    </Btn>\n  );\n};\nButton.prototype = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200; ;\n`;\nexport const ContainerModal = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { useEffect } from 'react';\nimport { Overlay, ContainerModal } from './Modal.styled';\n\nexport default function Modal(props) {\n  useEffect(() => {\n    window.addEventListener('keydown', hendelKeyDown);\n    return () => {\n      window.removeEventListener('keydown', hendelKeyDown);\n    };\n  });\n\n  const hendelKeyDown = e => {\n    if (e.code === 'Escape') {\n      props.showModal();\n    }\n  };\n\n  const hideModal = e => {\n    if (e.currentTarget === e.target) {\n      props.showModal();\n    }\n  };\n  return (\n    <Overlay onClick={hideModal}>\n      <ContainerModal>\n        <img src={props.props} alt=\"photoInModal\" />\n      </ContainerModal>\n    </Overlay>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ConteinerApp = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\nexport const TitleApp = styled.h3`\n  margin: auto;\n  font-size: large;\n  text-transform: uppercase;\n  color: #d44343;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { fetchImages } from 'services/api';\nimport { scroll } from 'services/scroll';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\nimport { LoaderMore } from 'components/Loader/Loader';\nimport { Button } from 'components/Button/Button';\nimport Modal from 'components/Modal/Modal';\nimport { ConteinerApp, TitleApp } from './App.styled';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [total, setTotal] = useState(1);\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [reqStatus, setReqStatus] = useState('idle');\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [photo, setpPhoto] = useState('');\n\n  useEffect(() => {\n    if (reqStatus === 'rejected') {\n      toast.error('Oops, there is no images with that name');\n    }\n  }, [reqStatus]);\n\n  useEffect(() => {\n    if (!query) return;\n\n    async function getImages() {\n      try {\n        setReqStatus('pending');\n        const imgData = await fetchImages(query, page);\n        setReqStatus('resolved');\n        setImages(prevImages => [...prevImages, ...imgData.hits]);\n        setTotal(imgData.totalHits);\n        scroll();\n      } catch (error) {\n        setReqStatus('rejected');\n      }\n    }\n    getImages();\n  }, [query, page]);\n\n  const submitForm = dataQuery => {\n    setQuery(dataQuery);\n    setImages([]);\n    setPage(1);\n  };\n\n  const handleButtonMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const toggleModalShow = event => {\n    if (!isOpenModal) {\n      setpPhoto(event.target.dataset.photo);\n    }\n    setIsOpenModal(!isOpenModal);\n  };\n\n  return (\n    <ConteinerApp>\n      <Searchbar onSubmit={submitForm} />\n      {!total && (\n        <TitleApp>\n          По такому запросу картинок не найдено. Введите другой запрос!!!\n        </TitleApp>\n      )}\n      {!images && <LoaderMore />}\n      {images && images.length > 0 && (\n        <>\n          <ImageGallery images={images} onClick={toggleModalShow} />\n          {isOpenModal && <Modal showModal={toggleModalShow} props={photo} />}\n          {reqStatus === 'pending' ? (\n            <LoaderMore />\n          ) : (\n            <Button onClick={handleButtonMore} />\n          )}\n        </>\n      )}\n      <ToastContainer autoClose={3000} />\n    </ConteinerApp>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}